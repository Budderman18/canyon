From d356e5ace3530a822d95c9cded0e75fbfed4f695 Mon Sep 17 00:00:00 2001
From: Blayung <gpewojan1@gmail.com>
Date: Sat, 17 Feb 2024 12:52:41 +0100
Subject: [PATCH] Reimplemented the inventory transaction event


diff --git a/src/main/java/net/minecraft/server/Container.java b/src/main/java/net/minecraft/server/Container.java
index bb9961471..98cc24f22 100644
--- a/src/main/java/net/minecraft/server/Container.java
+++ b/src/main/java/net/minecraft/server/Container.java
@@ -1,5 +1,14 @@
 package net.minecraft.server;
 
+// Canyon start
+import org.bukkit.craftbukkit.entity.CraftPlayer;
+import org.bukkit.craftbukkit.inventory.CraftItemStack;
+import org.bukkit.event.inventory.TransactionEvent;
+import org.bukkit.plugin.PluginManager;
+import org.bukkit.craftbukkit.CraftServer;
+import org.bukkit.Location;
+// Canyon end
+
 import java.util.ArrayList;
 import java.util.HashSet;
 import java.util.List;
@@ -13,6 +22,7 @@ public abstract class Container {
     private short a = 0;
     protected List listeners = new ArrayList();
     private Set b = new HashSet();
+    Location containerLocation = null; // Canyon
 
     public Container() {}
 
@@ -127,6 +137,12 @@ public abstract class Container {
                         ItemStack itemstack2 = slot1.getItem();
                         ItemStack itemstack3 = inventoryplayer.j();
 
+                        // Canyon start
+                        CraftServer server = entityhuman.world.getServer();
+                        PluginManager pluginManager = server.getPluginManager();
+                        CraftPlayer player = new CraftPlayer(server, (EntityPlayer) entityhuman);
+                        // Canyon end
+
                         if (itemstack2 != null) {
                             itemstack = itemstack2.cloneItemStack();
                         }
@@ -138,7 +154,14 @@ public abstract class Container {
                                     k = slot1.d();
                                 }
 
-                                slot1.c(itemstack3.a(k));
+                                // Canyon start
+                                ItemStack toPut = itemstack3.a(k);
+                                if (containerLocation != null && slot1.isNotPlayerInventory()) {
+                                    pluginManager.callEvent(new TransactionEvent(containerLocation, player, new CraftItemStack(toPut), false));
+                                }
+                                slot1.c(toPut);
+                                // Canyon end
+
                                 if (itemstack3.count == 0) {
                                     inventoryplayer.b((ItemStack) null);
                                 }
@@ -147,6 +170,12 @@ public abstract class Container {
                             k = j == 0 ? itemstack2.count : (itemstack2.count + 1) / 2;
                             ItemStack itemstack4 = slot1.a(k);
 
+                            // Canyon start
+                            if (containerLocation != null && slot1.isNotPlayerInventory()) {
+                                pluginManager.callEvent(new TransactionEvent(containerLocation, player, new CraftItemStack(itemstack4), true));
+                            }
+                            // Canyon end
+
                             inventoryplayer.b(itemstack4);
                             if (itemstack2.count == 0) {
                                 slot1.c((ItemStack) null);
@@ -164,6 +193,12 @@ public abstract class Container {
                                     k = itemstack3.getMaxStackSize() - itemstack2.count;
                                 }
 
+                                // Canyon start
+                                if (containerLocation != null && slot1.isNotPlayerInventory()) {
+                                    pluginManager.callEvent(new TransactionEvent(containerLocation, player, new CraftItemStack(new ItemStack(itemstack2.getItem(), k)), false));
+                                }
+                                // Canyon end
+
                                 itemstack3.a(k);
                                 if (itemstack3.count == 0) {
                                     inventoryplayer.b((ItemStack) null);
@@ -171,12 +206,25 @@ public abstract class Container {
 
                                 itemstack2.count += k;
                             } else if (itemstack3.count <= slot1.d()) {
+                                // Canyon start
+                                if (containerLocation != null && slot1.isNotPlayerInventory()) {
+                                    pluginManager.callEvent(new TransactionEvent(containerLocation, player, new CraftItemStack(itemstack2), true));
+                                    pluginManager.callEvent(new TransactionEvent(containerLocation, player, new CraftItemStack(itemstack3), false));
+                                }
+                                // Canyon end
+
                                 slot1.c(itemstack3);
                                 inventoryplayer.b(itemstack2);
                             }
                         } else if (itemstack2.id == itemstack3.id && itemstack3.getMaxStackSize() > 1 && (!itemstack2.usesData() || itemstack2.getData() == itemstack3.getData())) {
                             k = itemstack2.count;
                             if (k > 0 && k + itemstack3.count <= itemstack3.getMaxStackSize()) {
+                                // Canyon start
+                                if (containerLocation != null && slot1.isNotPlayerInventory()) {
+                                    pluginManager.callEvent(new TransactionEvent(containerLocation, player, new CraftItemStack(new ItemStack(itemstack3.getItem(), k)), true));
+                                }
+                                // Canyon end
+
                                 itemstack3.count += k;
                                 itemstack2.a(k);
                                 if (itemstack2.count == 0) {
diff --git a/src/main/java/net/minecraft/server/ContainerChest.java b/src/main/java/net/minecraft/server/ContainerChest.java
index 383cd2806..4de0b19c3 100644
--- a/src/main/java/net/minecraft/server/ContainerChest.java
+++ b/src/main/java/net/minecraft/server/ContainerChest.java
@@ -6,6 +6,8 @@ public class ContainerChest extends Container {
     private int b;
 
     public ContainerChest(IInventory iinventory, IInventory iinventory1) {
+        this.containerLocation = iinventory1.getLocation(); // Canyon
+
         this.a = iinventory1;
         this.b = iinventory1.getSize() / 9;
         int i = (this.b - 4) * 18;
diff --git a/src/main/java/net/minecraft/server/ContainerDispenser.java b/src/main/java/net/minecraft/server/ContainerDispenser.java
index ba2021941..a5667b0f2 100644
--- a/src/main/java/net/minecraft/server/ContainerDispenser.java
+++ b/src/main/java/net/minecraft/server/ContainerDispenser.java
@@ -5,6 +5,8 @@ public class ContainerDispenser extends Container {
     private TileEntityDispenser a;
 
     public ContainerDispenser(IInventory iinventory, TileEntityDispenser tileentitydispenser) {
+        this.containerLocation = tileentitydispenser.getLocation(); // Canyon
+
         this.a = tileentitydispenser;
 
         int i;
diff --git a/src/main/java/net/minecraft/server/ContainerFurnace.java b/src/main/java/net/minecraft/server/ContainerFurnace.java
index ca480db4b..f5e9ebab0 100644
--- a/src/main/java/net/minecraft/server/ContainerFurnace.java
+++ b/src/main/java/net/minecraft/server/ContainerFurnace.java
@@ -8,6 +8,8 @@ public class ContainerFurnace extends Container {
     private int h = 0;
 
     public ContainerFurnace(InventoryPlayer inventoryplayer, TileEntityFurnace tileentityfurnace) {
+        this.containerLocation = tileentityfurnace.getLocation();
+
         this.a = tileentityfurnace;
         this.a(new Slot(tileentityfurnace, 0, 56, 17));
         this.a(new Slot(tileentityfurnace, 1, 56, 53));
diff --git a/src/main/java/net/minecraft/server/EntityMinecart.java b/src/main/java/net/minecraft/server/EntityMinecart.java
index 32c583fa2..c472e0928 100644
--- a/src/main/java/net/minecraft/server/EntityMinecart.java
+++ b/src/main/java/net/minecraft/server/EntityMinecart.java
@@ -14,6 +14,8 @@ import org.bukkit.event.vehicle.VehicleMoveEvent;
 import org.bukkit.event.vehicle.VehicleUpdateEvent;
 // CraftBukkit end
 
+import org.bukkit.Location; // Canyon
+
 public class EntityMinecart extends Entity implements IInventory {
 
     private ItemStack[] items;
@@ -60,6 +62,12 @@ public class EntityMinecart extends Entity implements IInventory {
         this.height = this.width / 2.0F;
     }
 
+    // Canyon start
+    public Location getLocation() {
+        return null;
+    }
+    // Canyon end
+
     protected boolean n() {
         return false;
     }
diff --git a/src/main/java/net/minecraft/server/IInventory.java b/src/main/java/net/minecraft/server/IInventory.java
index bb6ce82f0..0131e1ecc 100644
--- a/src/main/java/net/minecraft/server/IInventory.java
+++ b/src/main/java/net/minecraft/server/IInventory.java
@@ -1,5 +1,7 @@
 package net.minecraft.server;
 
+import org.bukkit.Location; // Canyon
+
 public interface IInventory {
 
     int getSize();
@@ -19,4 +21,5 @@ public interface IInventory {
     boolean a_(EntityHuman entityhuman);
 
     public abstract ItemStack[] getContents(); // CraftBukkit
+    public Location getLocation(); // DOESN'T WORK WITH CRAFTINGS, ACTUAL PLAYER INVENTORIES OR MINECARTS // Canyon
 }
diff --git a/src/main/java/net/minecraft/server/InventoryCraftResult.java b/src/main/java/net/minecraft/server/InventoryCraftResult.java
index 2d0964f96..988a79b3e 100644
--- a/src/main/java/net/minecraft/server/InventoryCraftResult.java
+++ b/src/main/java/net/minecraft/server/InventoryCraftResult.java
@@ -1,5 +1,7 @@
 package net.minecraft.server;
 
+import org.bukkit.Location; // Canyon
+
 public class InventoryCraftResult implements IInventory {
 
     private ItemStack[] items = new ItemStack[1];
@@ -12,6 +14,12 @@ public class InventoryCraftResult implements IInventory {
 
     public InventoryCraftResult() {}
 
+    // Canyon start
+    public Location getLocation() {
+        return null;
+    }
+    // Canyon end
+
     public int getSize() {
         return 1;
     }
diff --git a/src/main/java/net/minecraft/server/InventoryCrafting.java b/src/main/java/net/minecraft/server/InventoryCrafting.java
index 9151b8bf3..06b8bd127 100644
--- a/src/main/java/net/minecraft/server/InventoryCrafting.java
+++ b/src/main/java/net/minecraft/server/InventoryCrafting.java
@@ -1,5 +1,7 @@
 package net.minecraft.server;
 
+import org.bukkit.Location; // Canyon
+
 public class InventoryCrafting implements IInventory {
 
     private ItemStack[] items;
@@ -20,6 +22,12 @@ public class InventoryCrafting implements IInventory {
         this.b = i;
     }
 
+    // Canyon start
+    public Location getLocation() {
+        return null;
+    }
+    // Canyon end
+
     public int getSize() {
         return this.items.length;
     }
diff --git a/src/main/java/net/minecraft/server/InventoryLargeChest.java b/src/main/java/net/minecraft/server/InventoryLargeChest.java
index 15dcdd8aa..3e781a7a9 100644
--- a/src/main/java/net/minecraft/server/InventoryLargeChest.java
+++ b/src/main/java/net/minecraft/server/InventoryLargeChest.java
@@ -1,5 +1,7 @@
 package net.minecraft.server;
 
+import org.bukkit.Location; // Canyon
+
 public class InventoryLargeChest implements IInventory {
 
     private String a;
@@ -22,6 +24,12 @@ public class InventoryLargeChest implements IInventory {
         this.c = iinventory1;
     }
 
+    // Canyon start
+    public Location getLocation() {
+        return this.b.getLocation();
+    }
+    // Canyon end
+
     public int getSize() {
         return this.b.getSize() + this.c.getSize();
     }
diff --git a/src/main/java/net/minecraft/server/InventoryPlayer.java b/src/main/java/net/minecraft/server/InventoryPlayer.java
index f25e699b2..5d4172763 100644
--- a/src/main/java/net/minecraft/server/InventoryPlayer.java
+++ b/src/main/java/net/minecraft/server/InventoryPlayer.java
@@ -1,5 +1,7 @@
 package net.minecraft.server;
 
+import org.bukkit.Location; // Canyon
+
 public class InventoryPlayer implements IInventory {
 
     public ItemStack[] items = new ItemStack[36];
@@ -23,6 +25,12 @@ public class InventoryPlayer implements IInventory {
         this.d = entityhuman;
     }
 
+    // Canyon start
+    public Location getLocation() {
+        return null;
+    }
+    // Canyon end
+
     public ItemStack getItemInHand() {
         return this.itemInHandIndex < 9 && this.itemInHandIndex >= 0 ? this.items[this.itemInHandIndex] : null;
     }
diff --git a/src/main/java/net/minecraft/server/Slot.java b/src/main/java/net/minecraft/server/Slot.java
index 18cc6a573..a2c271167 100644
--- a/src/main/java/net/minecraft/server/Slot.java
+++ b/src/main/java/net/minecraft/server/Slot.java
@@ -15,6 +15,23 @@ public class Slot {
         this.c = k;
     }
 
+    // Canyon start
+    // DOESN'T WORK WITH CRAFTINGS, ACTUAL PLAYER INVENTORIES OR MINECARTS
+    public boolean isNotPlayerInventory() {
+        if (this.inventory instanceof InventoryLargeChest) {
+            return this.index < 54;
+        } else if (this.inventory instanceof TileEntityChest) {
+            return this.index < 27;
+        } else if (this.inventory instanceof TileEntityDispenser) {
+            return this.index < 9;
+        } else if (this.inventory instanceof TileEntityFurnace) {
+            return this.index < 3;
+        } else {
+            return false;
+        }
+    }
+    // Canyon end
+
     public void a(ItemStack itemstack) {
         this.c();
     }
diff --git a/src/main/java/net/minecraft/server/TileEntity.java b/src/main/java/net/minecraft/server/TileEntity.java
index 64f1f3c79..79499d44d 100644
--- a/src/main/java/net/minecraft/server/TileEntity.java
+++ b/src/main/java/net/minecraft/server/TileEntity.java
@@ -3,6 +3,8 @@ package net.minecraft.server;
 import java.util.HashMap;
 import java.util.Map;
 
+import org.bukkit.Location; // Canyon
+
 public class TileEntity {
 
     private static Map a = new HashMap();
@@ -15,6 +17,12 @@ public class TileEntity {
 
     public TileEntity() {}
 
+    // Canyon start
+    public Location getLocation() {
+        return new Location(this.world.getWorld(), this.x, this.y, this.z);
+    }
+    // Canyon end
+
     private static void a(Class oclass, String s) {
         if (b.containsKey(s)) {
             throw new IllegalArgumentException("Duplicate id: " + s);
-- 
2.43.0

